// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/squat/terraform-provider-lambda/internal/sdk/internal/utils"
)

type Launch struct {
	// Short name of a region
	RegionName string `json:"region_name"`
	// Name of an instance type
	InstanceTypeName string `json:"instance_type_name"`
	// Names of the SSH keys to allow access to the instances. Currently, exactly one SSH key must be specified.
	SSHKeyNames []string `json:"ssh_key_names"`
	// Names of the file systems to attach to the instances. Currently, only one (if any) file system may be specified.
	FileSystemNames []string `json:"file_system_names,omitempty"`
	// Number of instances to launch
	Quantity *int64 `default:"1" json:"quantity"`
	// User-provided name for the instance
	Name *string `json:"name,omitempty"`
}

func (l Launch) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *Launch) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Launch) GetRegionName() string {
	if o == nil {
		return ""
	}
	return o.RegionName
}

func (o *Launch) GetInstanceTypeName() string {
	if o == nil {
		return ""
	}
	return o.InstanceTypeName
}

func (o *Launch) GetSSHKeyNames() []string {
	if o == nil {
		return []string{}
	}
	return o.SSHKeyNames
}

func (o *Launch) GetFileSystemNames() []string {
	if o == nil {
		return nil
	}
	return o.FileSystemNames
}

func (o *Launch) GetQuantity() *int64 {
	if o == nil {
		return nil
	}
	return o.Quantity
}

func (o *Launch) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}
