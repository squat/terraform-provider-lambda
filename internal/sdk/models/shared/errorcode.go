// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorCode - Unique identifier for the type of error
type ErrorCode string

const (
	ErrorCodeGlobalUnknown                                   ErrorCode = "global/unknown"
	ErrorCodeGlobalInvalidAPIKey                             ErrorCode = "global/invalid-api-key"
	ErrorCodeGlobalAccountInactive                           ErrorCode = "global/account-inactive"
	ErrorCodeGlobalInvalidAddress                            ErrorCode = "global/invalid-address"
	ErrorCodeGlobalInvalidParameters                         ErrorCode = "global/invalid-parameters"
	ErrorCodeGlobalObjectDoesNotExist                        ErrorCode = "global/object-does-not-exist"
	ErrorCodeGlobalQuotaExceeded                             ErrorCode = "global/quota-exceeded"
	ErrorCodeInstanceOperationsLaunchInsufficientCapacity    ErrorCode = "instance-operations/launch/insufficient-capacity"
	ErrorCodeInstanceOperationsLaunchFileSystemInWrongRegion ErrorCode = "instance-operations/launch/file-system-in-wrong-region"
	ErrorCodeSSHKeysKeyInUse                                 ErrorCode = "ssh-keys/key-in-use"
)

func (e ErrorCode) ToPointer() *ErrorCode {
	return &e
}
func (e *ErrorCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "global/unknown":
		fallthrough
	case "global/invalid-api-key":
		fallthrough
	case "global/account-inactive":
		fallthrough
	case "global/invalid-address":
		fallthrough
	case "global/invalid-parameters":
		fallthrough
	case "global/object-does-not-exist":
		fallthrough
	case "global/quota-exceeded":
		fallthrough
	case "instance-operations/launch/insufficient-capacity":
		fallthrough
	case "instance-operations/launch/file-system-in-wrong-region":
		fallthrough
	case "ssh-keys/key-in-use":
		*e = ErrorCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCode: %v", v)
	}
}
