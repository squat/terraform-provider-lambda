// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// FileSystem - Information about a shared file system
type FileSystem struct {
	// Unique identifier (ID) of a file system
	ID string `json:"id"`
	// Name of a file system
	Name string `json:"name"`
	// A date and time, formatted as an ISO 8601 time stamp
	Created string `json:"created"`
	// Information about a user in your team
	CreatedBy User `json:"created_by"`
	// Absolute path indicating where on instances the file system will be mounted
	MountPoint string `json:"mount_point"`
	Region     Region `json:"region"`
	// Whether the file system is currently in use by an instance. File systems that are in use cannot be deleted.
	IsInUse bool `json:"is_in_use"`
	// Approximate amount of storage used by the file system, in bytes. This value is an estimate that is updated every several hours.
	BytesUsed *int64 `json:"bytes_used,omitempty"`
}

func (o *FileSystem) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *FileSystem) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *FileSystem) GetCreated() string {
	if o == nil {
		return ""
	}
	return o.Created
}

func (o *FileSystem) GetCreatedBy() User {
	if o == nil {
		return User{}
	}
	return o.CreatedBy
}

func (o *FileSystem) GetMountPoint() string {
	if o == nil {
		return ""
	}
	return o.MountPoint
}

func (o *FileSystem) GetRegion() Region {
	if o == nil {
		return Region{}
	}
	return o.Region
}

func (o *FileSystem) GetIsInUse() bool {
	if o == nil {
		return false
	}
	return o.IsInUse
}

func (o *FileSystem) GetBytesUsed() *int64 {
	if o == nil {
		return nil
	}
	return o.BytesUsed
}
